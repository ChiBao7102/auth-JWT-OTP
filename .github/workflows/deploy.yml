name: deploy-application

on:
    push:
    pull_request:
      branches:
        - main
jobs:
  create-deployment-artifacts:
    name: Create deploy artifacts
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Compile CSS and Javascript
        run:
          npm install
          npm run prod
      - name: Configure PHP 8.2
        uses: shivammathur/setup-php@main
        with:
          php-version: 8.2
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

      - name: Install Composer dependencies
        run: composer install

      - name: Copy .env.example to .env
        run: php -r "file_exists('.env') || copy('.env.dev', '.env');"

      - name: Set required directory permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Generate encryption key
        run: php artisan key:generate
      - name: Create temporary sqlite database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Run laravel database migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate --force

      - name: Install PHP_CodeSniffer
        run: |
          curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
          php phpcs.phar --version

      - uses: tinovyatkin/action-php-codesniffer@v1
        with:
          files: "**.php" # you may customize glob as needed
          phpcs_path: php phpcs.phar
          standard: phpcs.xml

      - name: Run unit tests via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit
